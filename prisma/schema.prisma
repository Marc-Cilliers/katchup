generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chatter {
  id            String          @id @default(cuid())
  username      String
  ratings       ChatterRating[]
  youtubeVideos YoutubeVideo[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String          @id @default(cuid())
  name           String
  image          String
  email          String?         @unique
  emailVerified  DateTime?
  accounts       Account[]
  chatterRatings ChatterRating[]
  sessions       Session[]
  youtubeVideos  YoutubeVideo[]
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model YoutubeVideo {
  id        String    @id @default(cuid())
  timestamp DateTime
  archived  DateTime?
  url       String
  videoId   String
  title     String?
  duration  String?
  channel   String?
  thumbnail String?
  chatterId String
  userId    String
  chatter   Chatter   @relation(fields: [chatterId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}

model ChatterRating {
  id        String  @id @default(cuid())
  chatterId String
  userId    String
  rating    Int     @default(0)
  chatter   Chatter @relation(fields: [chatterId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}
